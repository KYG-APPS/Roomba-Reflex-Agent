Plan for HW 1 - Simple Reflex Agent

****************** DONE ******************
enum State
	- Success/Running/Failed states

enum TreeNodeType
	- string identifier
	- ClassType

* Done!
abstract class TreeNode
- Instance Variables:
	- ArrayList children;
	- String descriptor;
	- TreeNodeType type;
- Methods:
	- public TreeNode(String descriptor, TreeNodeType type);
	- public int numChildren();
	- public TreeNode getChild(int index); 
	- public String getDescriptor();
	- public TreeNodeType getTreeNodeType() ;
	- public abstract State run();
* All subclasses of node should implement their own static run function.

class BlackBoard
- Instance Variables
	- int batteryLevel;
	- boolean spot;
	- boolean general;
	- boolean dustySpot;
	- String homePath;

class Roomba:
- Instance Variables:
	- BehaviorTree behavior_tree;
- Methods:
	- Roomba();
	- int run_cycle();


****************** IN IMPLEMENTATION ******************
* Need to implement run()
Node Subclasses:
- Selection
- Sequence
- Priority
	- Needs priority identifier
Decorators:
- Logical Negation
- Until Succeeds
- Until Fails
- Timer

* Need to implement runCycle()
class BehaviorTree
- Instance Variables:
	- TreeNode root;
	- HashMap<String, String> blackboard;
- Methods:
	- BehaviorTree();
	- int runCycle();
	- HashMap<String, String> get_blackboard()
	
****************** AWAITING IMPLEMENTAION ******************
enum BehaviorTreeStructure
	- Node arrangement of behavior tree for easy changing/updating
	
class TreeGenerator:
	generateTreeFromEnum();
	
Generation of Random Scenarios?

TaskNode
- FIND_HOME
	- Writes to homePath
- GO_HOME
	- Reads from homePath
- DOCK
- CLEAN_SPOT
- DONE_SPOT
	- Writes to spot
- CLEAN
- DONE_GENERAL
	- Writes to general
- DO_NOTHING
ConditionNode
- BATTERY_GREATER_THAN_30
- SPOT
- GENERAL
- DUSTY_SPOT

GENERAL CLEANUP
- Brackets
- Access Keywords
- Documentation