Plan for HW 1 - Simple Reflex Agent

* Need to fix Placeholder
enum TreeNodeType
	- string identifier
	- ClassType

* Done!
enum State
	- Success/Running/Failed states
	

enum BehaviorTreeStructure
	- Node arrangement of behavior tree for easy changing/updating

* Done!
abstract class TreeNode
- Instance Variables:
	- ArrayList children;
	- String descriptor;
	- TreeNodeType type;
- Methods:
	- public TreeNode(String descriptor, TreeNodeType type);
	- public int numChildren();
	- public TreeNode getChild(int index); 
	- public String getDescriptor();
	- public TreeNodeType getTreeNodeType() ;
	- public abstract State run();
* All subclasses of node should implement their own static run function.

Node Subclasses:
- Priority
	- Needs priority identifier
- Selection
- Sequence
- Random Selection
- Random Sequence

Decorators:
- Logical Negation
- Until Succeeds
- Until Fails
- Timer

class BehaviorTree
- Instance Variables:
	- Node root;
	- HashMap<String, String> blackboard;
- Methods:
	- BehaviorTree();
	- int run_cycle();
	- HashMap<String, String> get_blackboard()

class Roomba:
- Instance Variables:
	- BehaviorTree behavior_tree;
- Methods:
	- Roomba();
	- int run_cycle();
	- boolean generate_simulated_scenario();